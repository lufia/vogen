// Code generated by vogen DO NOT EDIT.
package sample

import (
	"github.com/tjmtmmnk/vogen/sample2"

	"testing"
)

type AddressSetter struct {
	Number *AddressNumber

	Number2 *AddressNumber2

	Number2p *AddressNumber2p

	City *AddressCity

	Country *AddressCountry

	Temp *sample2.Temp

	TempFunc *TempFunc

	TempSlice *TempSlice

	TempSliceP *TempSliceP

	TempMap *TempMap

	Temp2 *Temp2

	TempTime *TempTime
}

func BuildAddress(t *testing.T, s *AddressSetter) *Address {
	obj := &Address{}

	if s.Number == nil {
		obj.Number = BuildAddressNumber(t)
	} else {
		obj.Number = *s.Number
	}

	if s.Number2 == nil {
		obj.Number2 = BuildAddressNumber2(t)
	} else {
		obj.Number2 = *s.Number2
	}

	if s.Number2p == nil {
		obj.Number2p = BuildAddressNumber2p(t)
	} else {
		obj.Number2p = *s.Number2p
	}

	if s.City == nil {
		obj.City = BuildAddressCity(t)
	} else {
		obj.City = *s.City
	}

	if s.Country == nil {
		obj.Country = BuildAddressCountry(t)
	} else {
		obj.Country = *s.Country
	}

	if s.Temp == nil {
		obj.Temp = BuildAddressTemp(t)
	} else {
		obj.Temp = *s.Temp
	}

	if s.TempFunc == nil {
		obj.TempFunc = BuildAddressTempFunc(t)
	} else {
		obj.TempFunc = *s.TempFunc
	}

	if s.TempSlice == nil {
		obj.TempSlice = BuildAddressTempSlice(t)
	} else {
		obj.TempSlice = *s.TempSlice
	}

	if s.TempSliceP == nil {
		obj.TempSliceP = BuildAddressTempSliceP(t)
	} else {
		obj.TempSliceP = *s.TempSliceP
	}

	if s.TempMap == nil {
		obj.TempMap = BuildAddressTempMap(t)
	} else {
		obj.TempMap = *s.TempMap
	}

	if s.Temp2 == nil {
		obj.Temp2 = BuildAddressTemp2(t)
	} else {
		obj.Temp2 = *s.Temp2
	}

	if s.TempTime == nil {
		obj.TempTime = BuildAddressTempTime(t)
	} else {
		obj.TempTime = *s.TempTime
	}

	return obj
}

type Address2Setter struct {
	Number *AddressNumber
}

func BuildAddress2(t *testing.T, s *Address2Setter) *Address2 {
	obj := &Address2{}

	if s.Number == nil {
		obj.Number = BuildAddress2Number(t)
	} else {
		obj.Number = *s.Number
	}

	return obj
}
